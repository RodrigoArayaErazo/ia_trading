import streamlit as st
import pandas as pd

st.set_page_config(page_title="IA Trading - Dashboard", layout="centered")

st.title("ðŸ“Š Dashboard de PredicciÃ³n IA")

# Leer precios actuales
try:
    precios = pd.read_csv("data/precios_reales.csv")
    ultimo_precio = precios.iloc[-1]
    st.subheader("ðŸŸ¢ Ãšltimo precio real:")
    st.markdown(f"**{ultimo_precio['timestamp']} â†’ ${ultimo_precio['precio']:.4f} USD**")
except Exception as e:
    st.error(f"Error al leer precios reales: {e}")

# Leer predicciones
try:
    predicciones = pd.read_csv("data/predicciones.csv")
    ultima_pred = predicciones.iloc[-1]

    st.subheader("ðŸ¤– PredicciÃ³n de prÃ³ximas 4 velas:")
    st.markdown(f"""
    - Vela 1: **${ultima_pred['vela_1']:.4f}**
    - Vela 2: **${ultima_pred['vela_2']:.4f}**
    - Vela 3: **${ultima_pred['vela_3']:.4f}**
    - Vela 4: **${ultima_pred['vela_4']:.4f}**
    """)
except Exception as e:
    st.error(f"Error al leer predicciones: {e}")

# InformaciÃ³n general
st.markdown("---")
st.markdown("ðŸ”„ Los datos se actualizan automÃ¡ticamente cada vez que la IA recibe un nuevo precio.")
# Leer Ãºltima seÃ±al
try:
    senales = pd.read_csv("data/senales.csv")
    ultima = senales.iloc[-1]

    st.subheader("ðŸ§  SeÃ±al IA mÃ¡s reciente:")
    st.markdown(f"""
    - ðŸ“… Fecha: **{ultima['timestamp']}**
    - ðŸ§­ SeÃ±al: **{'ðŸŸ¢ LONG' if ultima['senal'] == 'LONG' else 'ðŸ”´ SHORT'}**
    - ðŸŽ¯ Entrada: **${ultima['precio_entrada']:.4f}**
    - ðŸ“ˆ Take Profit: **${ultima['take_profit']:.4f}**
    - ðŸ“‰ Stop Loss: **${ultima['stop_loss']:.4f}**
    """)
except Exception as e:
    st.warning(f"No se pudo cargar la seÃ±al mÃ¡s reciente: {e}")

